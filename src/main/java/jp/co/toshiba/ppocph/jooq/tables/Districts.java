/*
 * This file is generated by jOOQ.
 */
package jp.co.toshiba.ppocph.jooq.tables;


import java.util.Arrays;
import java.util.List;

import jp.co.toshiba.ppocph.jooq.Keys;
import jp.co.toshiba.ppocph.jooq.Public;
import jp.co.toshiba.ppocph.jooq.tables.records.DistrictsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 地域テーブル
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Districts extends TableImpl<DistrictsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.districts</code>
     */
    public static final Districts DISTRICTS = new Districts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DistrictsRecord> getRecordType() {
        return DistrictsRecord.class;
    }

    /**
     * The column <code>public.districts.id</code>. ID
     */
    public final TableField<DistrictsRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "ID");

    /**
     * The column <code>public.districts.name</code>. 名称
     */
    public final TableField<DistrictsRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(20).nullable(false), this, "名称");

    /**
     * The column <code>public.districts.chiho_id</code>. 地方ID
     */
    public final TableField<DistrictsRecord, Long> CHIHO_ID = createField(DSL.name("chiho_id"), SQLDataType.BIGINT.nullable(false), this, "地方ID");

    /**
     * The column <code>public.districts.district_flag</code>. 地域フラグ
     */
    public final TableField<DistrictsRecord, String> DISTRICT_FLAG = createField(DSL.name("district_flag"), SQLDataType.VARCHAR(40), this, "地域フラグ");

    /**
     * The column <code>public.districts.shuto_id</code>. 州都ID
     */
    public final TableField<DistrictsRecord, Long> SHUTO_ID = createField(DSL.name("shuto_id"), SQLDataType.BIGINT.nullable(false), this, "州都ID");

    /**
     * The column <code>public.districts.delete_flg</code>. 論理削除フラグ
     */
    public final TableField<DistrictsRecord, String> DELETE_FLG = createField(DSL.name("delete_flg"), SQLDataType.VARCHAR(8).nullable(false), this, "論理削除フラグ");

    private Districts(Name alias, Table<DistrictsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Districts(Name alias, Table<DistrictsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("地域テーブル"), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.districts</code> table reference
     */
    public Districts(String alias) {
        this(DSL.name(alias), DISTRICTS);
    }

    /**
     * Create an aliased <code>public.districts</code> table reference
     */
    public Districts(Name alias) {
        this(alias, DISTRICTS);
    }

    /**
     * Create a <code>public.districts</code> table reference
     */
    public Districts() {
        this(DSL.name("districts"), null);
    }

    public <O extends Record> Districts(Table<O> child, ForeignKey<O, DistrictsRecord> key) {
        super(child, key, DISTRICTS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<DistrictsRecord> getPrimaryKey() {
        return Keys.DISTRICTS_PKEY;
    }

    @Override
    public List<UniqueKey<DistrictsRecord>> getKeys() {
        return Arrays.<UniqueKey<DistrictsRecord>>asList(Keys.DISTRICTS_PKEY);
    }

    @Override
    public List<ForeignKey<DistrictsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DistrictsRecord, ?>>asList(Keys.DISTRICTS__FK_DISTRICTS_CHIHOS);
    }

    private transient Chihos _chihos;

    public Chihos chihos() {
        if (_chihos == null)
            _chihos = new Chihos(this, Keys.DISTRICTS__FK_DISTRICTS_CHIHOS);

        return _chihos;
    }

    @Override
    public Districts as(String alias) {
        return new Districts(DSL.name(alias), this);
    }

    @Override
    public Districts as(Name alias) {
        return new Districts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Districts rename(String name) {
        return new Districts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Districts rename(Name name) {
        return new Districts(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, Long, String, Long, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
