/*
 * This file is generated by jOOQ.
 */
package jp.co.toshiba.ppocph.jooq.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;

import jp.co.toshiba.ppocph.jooq.tables.Employees;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 社員テーブル
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeesRecord extends UpdatableRecordImpl<EmployeesRecord> implements Record8<Long, String, String, String, String, LocalDateTime, String, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.employees.id</code>. ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.employees.id</code>. ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.employees.login_account</code>. アカウント
     */
    public void setLoginAccount(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.employees.login_account</code>. アカウント
     */
    public String getLoginAccount() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.employees.password</code>. パスワード
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.employees.password</code>. パスワード
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.employees.username</code>. ユーザ名称
     */
    public void setUsername(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.employees.username</code>. ユーザ名称
     */
    public String getUsername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.employees.email</code>. メール
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.employees.email</code>. メール
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.employees.created_time</code>. 作成時間
     */
    public void setCreatedTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.employees.created_time</code>. 作成時間
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.employees.delete_flg</code>. ステータス
     */
    public void setDeleteFlg(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.employees.delete_flg</code>. ステータス
     */
    public String getDeleteFlg() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.employees.date_of_birth</code>. 生年月日
     */
    public void setDateOfBirth(LocalDate value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.employees.date_of_birth</code>. 生年月日
     */
    public LocalDate getDateOfBirth() {
        return (LocalDate) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, String, LocalDateTime, String, LocalDate> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, String, LocalDateTime, String, LocalDate> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Employees.EMPLOYEES.ID;
    }

    @Override
    public Field<String> field2() {
        return Employees.EMPLOYEES.LOGIN_ACCOUNT;
    }

    @Override
    public Field<String> field3() {
        return Employees.EMPLOYEES.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return Employees.EMPLOYEES.USERNAME;
    }

    @Override
    public Field<String> field5() {
        return Employees.EMPLOYEES.EMAIL;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Employees.EMPLOYEES.CREATED_TIME;
    }

    @Override
    public Field<String> field7() {
        return Employees.EMPLOYEES.DELETE_FLG;
    }

    @Override
    public Field<LocalDate> field8() {
        return Employees.EMPLOYEES.DATE_OF_BIRTH;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLoginAccount();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getUsername();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedTime();
    }

    @Override
    public String component7() {
        return getDeleteFlg();
    }

    @Override
    public LocalDate component8() {
        return getDateOfBirth();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLoginAccount();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getUsername();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedTime();
    }

    @Override
    public String value7() {
        return getDeleteFlg();
    }

    @Override
    public LocalDate value8() {
        return getDateOfBirth();
    }

    @Override
    public EmployeesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EmployeesRecord value2(String value) {
        setLoginAccount(value);
        return this;
    }

    @Override
    public EmployeesRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public EmployeesRecord value4(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public EmployeesRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public EmployeesRecord value6(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public EmployeesRecord value7(String value) {
        setDeleteFlg(value);
        return this;
    }

    @Override
    public EmployeesRecord value8(LocalDate value) {
        setDateOfBirth(value);
        return this;
    }

    @Override
    public EmployeesRecord values(Long value1, String value2, String value3, String value4, String value5, LocalDateTime value6, String value7, LocalDate value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeesRecord
     */
    public EmployeesRecord() {
        super(Employees.EMPLOYEES);
    }

    /**
     * Create a detached, initialised EmployeesRecord
     */
    public EmployeesRecord(Long id, String loginAccount, String password, String username, String email, LocalDateTime createdTime, String deleteFlg, LocalDate dateOfBirth) {
        super(Employees.EMPLOYEES);

        setId(id);
        setLoginAccount(loginAccount);
        setPassword(password);
        setUsername(username);
        setEmail(email);
        setCreatedTime(createdTime);
        setDeleteFlg(deleteFlg);
        setDateOfBirth(dateOfBirth);
    }
}
