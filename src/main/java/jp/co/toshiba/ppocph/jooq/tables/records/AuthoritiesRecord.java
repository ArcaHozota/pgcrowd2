/*
 * This file is generated by jOOQ.
 */
package jp.co.toshiba.ppocph.jooq.tables.records;


import jp.co.toshiba.ppocph.jooq.tables.Authorities;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthoritiesRecord extends UpdatableRecordImpl<AuthoritiesRecord> implements Record4<Long, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.authorities.id</code>. ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.authorities.id</code>. ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.authorities.name</code>. 権限名称
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.authorities.name</code>. 権限名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.authorities.title</code>. 漢字名称
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.authorities.title</code>. 漢字名称
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.authorities.category_id</code>. 分類ID
     */
    public void setCategoryId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.authorities.category_id</code>. 分類ID
     */
    public Long getCategoryId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Authorities.AUTHORITIES.ID;
    }

    @Override
    public Field<String> field2() {
        return Authorities.AUTHORITIES.NAME;
    }

    @Override
    public Field<String> field3() {
        return Authorities.AUTHORITIES.TITLE;
    }

    @Override
    public Field<Long> field4() {
        return Authorities.AUTHORITIES.CATEGORY_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public Long component4() {
        return getCategoryId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public Long value4() {
        return getCategoryId();
    }

    @Override
    public AuthoritiesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuthoritiesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public AuthoritiesRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public AuthoritiesRecord value4(Long value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public AuthoritiesRecord values(Long value1, String value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthoritiesRecord
     */
    public AuthoritiesRecord() {
        super(Authorities.AUTHORITIES);
    }

    /**
     * Create a detached, initialised AuthoritiesRecord
     */
    public AuthoritiesRecord(Long id, String name, String title, Long categoryId) {
        super(Authorities.AUTHORITIES);

        setId(id);
        setName(name);
        setTitle(title);
        setCategoryId(categoryId);
    }
}
